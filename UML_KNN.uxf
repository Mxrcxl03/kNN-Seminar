<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>432</x>
      <y>369</y>
      <w>270</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>/Neuron/
-
# value: double
# activationFunction: String
-
+ Neuron()

/+ getNID(): int/

+ getValue(): double
+ getActivationFunction(): String
+ setActivationFunction(function: String): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>252</x>
      <y>756</y>
      <w>198</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>InputNeuron
-
- inputNID: int
-
+ InputNeuron()
+ InputNeuron(nid: int)

+ getNID(): int
+ setValue(value: double): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>756</y>
      <w>153</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>OutputNeuron
-
- outputNID: int
-
+ OutputNeuron()
+ OutputNeuron(nid: int)

+ getNID(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>27</y>
      <w>414</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>NeuronalesNetz
-
# layer: Neuron[ ][ ]
// double[Ebene (1, 2)][von (untere)][zu (obere)]
# weights: double[ ][ ][ ]
-
+ initNetz(netzkonf: int[ ]): void
+ initGewichteRandom(): void
+ initGewichte(gewichte: double[ ][ ][ ]): void
+ computeNN(input: double[ ]): void

// Aktivierungsfunktionen
+ computeActivationFunction(value: double, output: Neuron): double
+ identity(value: double): double
+ logi(value: double): double
+ tanh(value: double): double

// Hilfsmethoden
+ getLayerCount(): int
+ ausgabeOutput(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>468</x>
      <y>756</y>
      <w>153</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>HiddenNeuron
-
- hiddenNID: int
-
+ HiddenNeuron()
+ HiddenNeuron(nid: int)

+ getNID(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>558</x>
      <y>270</y>
      <w>27</w>
      <h>117</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>531</y>
      <w>135</w>
      <h>243</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>531</y>
      <w>27</w>
      <h>243</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>585</x>
      <y>531</y>
      <w>90</w>
      <h>243</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>756</y>
      <w>144</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>BiasNeuron
-
_- biasValue: double_

- biasNID: int
-
+ BiasNeuron()

+ getNID(): int
_+ getBiasValue: double_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>657</x>
      <y>531</y>
      <w>180</w>
      <h>243</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;250.0</additional_attributes>
  </element>
</diagram>
